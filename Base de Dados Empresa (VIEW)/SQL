create table marcas (     --criando tabela marcas
  mrc_id			int		auto_increment		primary key,
  mrc_nome			varchar(50)	not null,
  mrc_nacionalidade varchar(50)
 );
 
create table produtos (   --criando tabela produtos
  prd_id			int		auto_increment		primary key,
  prd_nome			varchar(50)	not null,
  prd_qtd_estoque	int 		not null  default 0,
  prd_estoque_mim	int 		not null  default 0,
  prd_data_fabricacao timestamp			  default now(),
  prd_perecivel		boolean,
  prd_valor			decimal(10,2),
  prd_marca_id		int,
  constraint fk_marcas	foreign key(prd_marca_id) references marcas(mrc_id)
 );
  
create table fornecedores (    --criando tabela fornecedores
  frn_id		int 		auto_increment		primary key,
  frn_nome		varchar(50)	not null,
  frn_email		varchar(50)
);

create table produto_fornecedor (    --criando tabela prdutofornecedor
  pf_prod_id		int 		references produtos		(prd_id),
  pf_forn_id		int 		references fornecedores (frn_id),
  primary key (pf_prod_id, pf_forn_id)
);

INSERT INTO marcas (mrc_nome, mrc_nacionalidade)
VALUES
('Nike', 'Estados Unidos'),
('Adidas', 'Alemanha'),
('Toyota', 'Japão'),
('Samsung', 'Coreia do Sul'),
('LOréal', 'França'),
('Sony', 'Japão'),
('Nestlé', 'Suíça'),
('Coca-Cola', 'Estados Unidos');

INSERT INTO produtos (prd_nome, prd_qtd_estoque, prd_estoque_mim, prd_data_fabricacao, prd_perecivel, prd_valor, prd_marca_id)
VALUES
('Tênis esportivo Nike', 200, 50, '2024-04-15', false, 150.00, 1),
('Camiseta esportiva Nike', 150, 30, '2024-04-16', false, 80.00, 1),
('Chuteira de futebol Nike', 100, 20, '2024-04-17', false, 200.00, 1),
('Bola de basquete Nike', 180, 40, '2024-04-18', false, 30.00, 1),
('Relógio esportivo Adidas', 250, 60, '2024-04-19', false, 120.00, 2),
('Mochila escolar Adidas', 120, 25, '2024-04-20', false, 70.00, 2),
('Boné de beisebol Adidas', 80, 15, '2024-04-21', false, 40.00, 2),
('Meias esportivas Adidas', 300, 70, '2024-04-22', false, 15.00, 2),
('Carro compacto Toyota', 220, 50, '2024-04-23', false, 15000.00, 3),
('SUV Toyota', 150, 30, '2024-04-24', false, 25000.00, 3),
('Caminhonete Toyota', 180, 40, '2024-04-25', false, 30000.00, 3),
('TV de tela grande Samsung', 100, 25, '2024-04-26', false, 1000.00, 4),
('Smartphone Samsung', 200, 50, '2024-04-27', false, 800.00, 4),
('Tablet Samsung', 130, 35, '2024-04-28', false, 500.00, 4),
('Frigobar Samsung', 250, 60, '2024-04-29', false, 300.00, 4),
('Shampoo anti-caspa L''Oréal', 160, 45, '2024-04-30', false, 20.00, 5),
('Creme facial hidratante L''Oréal', 90, 20, '2024-05-01', false, 35.00, 5),
('Perfume masculino L''Oréal', 280, 65, '2024-05-02', false, 70.00, 5),
('Perfume feminino L''Oréal', 170, 40, '2024-05-03', false, 65.00, 5),
('Fone de ouvido sem fio Sony', 200, 50, '2024-05-04', false, 150.00, 6),
('Câmera digital Sony', 120, 30, '2024-05-05', false, 300.00, 6),
('Console de videogame Sony', 220, 55, '2024-05-06', false, 400.00, 6),
('Caixa de chocolates Nestlé', 140, 35, '2024-05-07', true, 10.00, 7),
('Barra de cereal Nestlé', 180, 45, '2024-05-08', true, 5.00, 7),
('Pote de sorvete Nestlé', 100, 25, '2024-05-09', true, 15.00, 7),
('Água mineral Nestlé', 240, 60, '2024-05-10', true, 2.00, 7),
('Refrigerante de cola Coca-Cola', 130, 30, '2024-05-11', true, 4.00, 8),
('Refrigerante de guaraná Coca-Cola', 190, 50, '2024-05-12', true, 4.00, 8),
('Refrigerante de laranja Coca-Cola', 150, 35, '2024-05-13', true, 4.00, 8),
('Refrigerante de limão Coca-Cola', 200, 45, '2024-05-14', true, 4.00, 8);

INSERT INTO fornecedores (frn_nome, frn_email)
VALUES
('Nike Supplier', 'nike_supplier@gmail.com'),
('Adidas Supplier', 'adidas_supplier@gmail.com'),
('Toyota Supplier', 'toyota_supplier@gmail.com'),
('Samsung Supplier', 'samsung_supplier@gmail.com'),
('L''Oréal Supplier', 'loreal_supplier@gmail.com'),
('Sony Supplier', 'sony_supplier@gmail.com'),
('Nestlé Supplier', 'nestle_supplier@gmail.com'),
('Coca-Cola Supplier', 'cocacola_supplier@gmail.com'),
('Volkswagen Supplier', 'volkswagen_supplier@gmail.com'),
('Apple Supplier', 'apple_supplier@gmail.com');

INSERT INTO produto_fornecedor (pf_prod_id, pf_forn_id)
VALUES
(1, 1),
(2, 1),
(3, 1),
(4, 1),
(5, 2),
(6, 2),
(7, 2),
(8, 2),
(9, 3),
(10, 3),
(11, 3),
(12, 4),
(13, 4),
(14, 4),
(15, 4),
(16, 5),
(17, 5),
(18, 5),
(19, 5),
(20, 6),
(21, 6),
(22, 6),
(23, 7),
(24, 7),
(25, 7),
(26, 7),
(27, 8),
(28, 8),
(29, 8),
(30, 8);



--EXERCÍCIO 1: Crie uma view que mostra todos os produtos e suas respectivas marcas

CREATE VIEW produtos_marcas AS
SELECT produtos.prd_id, produtos.prd_nome, pprodutos.prd_valor, marcas.mrc_nome
FROM produtos
JOIN marcas m ON produtos.prd_marca_id = marcas.mrc_id;

--EXERCÍCIO 2: Crie uma view que mostra todos os produtos e seus respectivos fornecedores

CREATE VIEW produtos_fornecedores AS
SELECT pprodutos.prd_id, produtos.prd_nome, fornecedores.frn_nome
FROM produtos
JOIN produto_fornecedor pf ON p.prd_id = pf.pf_prod_id
JOIN fornecedores f ON pf.pf_forn_id = f.frn_id;

--EXERCÍCIO 3: Crie uma view que mostra todos os produtos e seus respectivos fornecedores e marcas

CREATE VIEW produtos_fornecedores_marcas AS
SELECT produtos.prd_id, produtos.prd_nome, fornecedores.frn_nome, marcas.mrc_nome
FROM produtos
JOIN produto_fornecedor ON produtos.prd_id = produto_fornecedor.pf_prod_id
JOIN fornecedores ON produto_fornecedor.pf_forn_id = fornecedores.frn_id
JOIN marcas ON produtos.prd_marca_id = marcas.mrc_id;

--EXERCÍCIO 4: Crie uma view que mostra todos os produtos com estoque abaixo do mínimo

CREATE VIEW produtos_estoque_baixo AS
SELECT prd_id, prd_nome, prd_qtd_estoque, prd_estoque_mim
FROM produtos
WHERE prd_qtd_estoque < prd_estoque_mim;

--EXERCÍCIO 5: Adicione o campo data de validade. Insira novos produtos com essa informação

ALTER TABLE produtos ADD COLUMN prd_data_validade DATE;
INSERT INTO produtos (prd_nome, prd_qtd_estoque, prd_estoque_mim, prd_data_fabricacao, prd_perecivel, prd_valor, prd_marca_id, prd_data_validade)
VALUES
('Leite', 50, 10, '2024-04-22', true, 3.50, 7, '2024-05-22'),
('Iogurte', 80, 20, '2024-04-23', true, 2.00, 7, '2024-05-25');


--EXERCÍCIO 6: Crie uma view que mostra todos os produtos e suas respectivas marcas com validade vencida

CREATE VIEW produtos_validade_vencida AS
SELECT produtos.prd_id, produtos.prd_nome, produtos.prd_data_validade, marcas.mrc_nome
FROM produtos
JOIN marcas ON produtos.prd_marca_id = marcas.mrc_id
WHERE produtos.prd_data_validade < CURRENT_DATE();


--EXERCÍCIO 7: Selecionar os produtos com preço acima da média

SELECT prd_id, prd_nome, prd_valor
FROM produtos
WHERE prd_valor > (SELECT AVG(prd_valor) FROM produtos);
